#!/bin/sh

set -e

. lib/env.sh
. lib/logging.sh
. lib/registry.sh
. lib/utils.sh

section "System Packages"
case $(uname) in
  Linux)
    if command -v pacman >/dev/null; then
      BLD="ccache clang"
      LIB=""
      USR="bat ctags diff-so-fancy direnv exa fac fd fish fzf git git-lfs hexyl htop hub neovim ripgrep shellcheck unzip xdg-utils"

      INSTALLED=$(pacman -Qq)
    
      pack=https://github.com/maralla/pack/releases/download/v0.2.3/pack-v0.2.3-x86_64-unknown-linux-gnu.tar.gz
      curl -sL ${pack} | tar x -C ${HOME}/.local/bin/ pack
      
      icdiff=https://github.com/jeffkaufman/icdiff/archive/release-1.9.4.tar.gz
      curl -sL ${icdiff} | tar x -C ${HOME}/.local/bin/ --strip-components=1 icdiff-release-1.9.4/{git-icdiff,icdiff}
    elif command -v yum >/dev/null; then
      BLD="ccache clang"
      LIB=""
      USR="ctags fish git git-lfs htop bsdtar neovim ripgrep ShellCheck unzip xdg-utils"

      INSTALLED=$(rpm -qa --queryformat '%{name}\n')
      
      sudo yum-config-manager --add-repo=https://copr.fedorainfracloud.org/coprs/carlwgeorge/ripgrep/repo/epel-7/carlwgeorge-ripgrep-epel-7.repo
      
      fzf=https://github.com/junegunn/fzf-bin/releases/download/0.17.5/fzf-0.17.5-linux_amd64.tgz
      curl -sL ${fzf} | tar xz -C ${HOME}/.local/bin/ fzf
    
      #pack=https://github.com/maralla/pack/releases/download/v0.2.3/pack-v0.2.3-x86_64-unknown-linux-gnu.tar.gz
      #curl -sL ${pack} | tar xz -C ${HOME}/.local/bin/ pack
      
      #exa=https://github.com/ogham/exa/releases/download/v0.8.0/exa-linux-x86_64-0.8.0.zip
      #curl -sL ${exa} > exa.zip && unzip exa.zip -d ${HOME}/.local/bin/ && mv ${HOME}/.local/bin/exa{-linux-x86_64,} && rm -f exa.zip
      
      direnv=https://github.com/direnv/direnv/releases/download/v2.18.2/direnv.linux-amd64
      curl -sL ${direnv} > ${HOME}/.local/bin/direnv && chmod a+x ${HOME}/.local/bin/direnv
      
      bat=https://github.com/sharkdp/bat/releases/download/v0.9.0/bat-v0.9.0-x86_64-unknown-linux-musl.tar.gz
      curl -sL ${bat} | tar xz -C ${HOME}/.local/bin/ --strip-components=1 bat-v0.9.0-x86_64-unknown-linux-musl/bat
      
      icdiff=https://github.com/jeffkaufman/icdiff/archive/release-1.9.4.tar.gz
      curl -sL ${icdiff} | tar xz -C ${HOME}/.local/bin/ --strip-components=1 icdiff-release-1.9.4/{git-icdiff,icdiff}
    
      hexyl=https://github.com/sharkdp/hexyl/releases/download/v0.2.0/hexyl-v0.2.0-x86_64-unknown-linux-musl.tar.gz
      curl -sL ${hexyl} | tar xz -C ${HOME}/.local/bin/ --strip-components=1 hexyl-v0.2.0-x86_64-unknown-linux-musl/hexyl
      
      fd=https://github.com/sharkdp/fd/releases/download/v7.2.0/fd-v7.2.0-x86_64-unknown-linux-musl.tar.gz
      curl -sL ${fd} | tar xz -C ${HOME}/.local/bin/ --strip-components=1 fd-v7.2.0-x86_64-unknown-linux-musl/fd
    else
      error "Unsupported package manager."
    fi
    ;;
  Darwin)
    BLD="ccache"
    LIB=""
    USR="bat coreutils ctags curl diff-so-fancy direnv exa fac fd fish fzf git git-lfs htop hub neovim ripgrep shellcheck unzip xz"

    INSTALLED=$(brew ls -1)
    
    brew tap mkchoi212/fac https://github.com/mkchoi212/fac.git
    
    pack=https://github.com/maralla/pack/releases/download/v0.2.3/pack-v0.2.3-x86_64-apple-darwin.tar.gz
    curl -sL ${pack} | tar x -C ${HOME}/.local/bin/ pack
    
    hexyl=https://github.com/sharkdp/hexyl/releases/download/v0.2.0/hexyl-v0.2.0-x86_64-apple-darwin.tar.gz
    curl -sL ${hexyl} | tar x -C ${HOME}/.local/bin/ --strip-components=1 hexyl-v0.2.0-x86_64-apple-darwin/hexyl
    
    icdiff=https://github.com/jeffkaufman/icdiff/archive/release-1.9.4.tar.gz
    curl -sL ${icdiff} | tar x -C ${HOME}/.local/bin/ --strip-components=1 icdiff-release-1.9.4/{git-icdiff,icdiff}
    ;;
  *)
    error "Unsupported operating system."
    ;;
esac
for pkg in $BLD $LIB $USR; do
  if ! echo "$INSTALLED" | grep -Fwq "$pkg"; then
    PKGS="${PKGS:+$PKGS }$pkg"
  fi
done
if [ -n "$PKGS" ]; then
  case $(uname) in
    Linux)
      if command -v yay >/dev/null; then
        info "Installing system packages with yay..."
        sh -c "yay -Sy --noconfirm $PKGS"
      elif command -v pacman >/dev/null; then
        info "Installing system packages with pacman..."
        sudo sh -c "pacman -Sy --noconfirm $PKGS"
      elif command -v yum >/dev/null; then
        info "Installing system packages with yum..."
        sudo sh -c "yum install -y $PKGS"
      fi
      ;;
    Darwin)
      info "Installing system packages with brew..."
      sh -c "brew install $PKGS"
      ;;
  esac
else
  info "All system packages are installed."
fi

section "Language Support"
for support in support/*.sh; do
  if ! echo "$SKIP_LANGUAGES" | grep -Fq "$(stem "$support")"; then
    # shellcheck source=/dev/null
    . "$support"
  fi
done

important "Done! Restart your shell!"
